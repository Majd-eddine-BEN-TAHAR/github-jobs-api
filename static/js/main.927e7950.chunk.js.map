{"version":3,"sources":["hooks/useFetch.js","components/Job/Job.js","components/JobPagination/JobPagination.js","components/SearchForm/SearchForm.js","App.js","index.js","assets/previous.svg","assets/next.svg"],"names":["ACTIONS","CORS_URL","API_URL","reducer","state","action","type","jobs","loading","payload","error","hasNextPage","useFetch","params","page","useReducer","dispatch","useEffect","cancelRequestTimer1","setTimeout","axios","mardown","then","res","data","console","log","catch","err","cancelRequestTimer2","length","clearTimeout","Job","job","current_datetime","Date","created_at","formatted_date","getDate","getMonth","getFullYear","description","useRef","useState","showHideDetails","setShowHideDetails","className","title","company","src","company_logo","alt","id","location","href","url","target","ref","source","escapeHtml","onClick","current","classList","toggle","prevState","JobPagination","setPage","adjustPage","amount","currentPage","PreviousIcon","NextIcon","SearchForm","onParamsChange","htmlFor","name","onChange","value","full_time","App","setParams","style","textAlign","fontSize","e","paramName","paramValue","checked","prevParams","map","key","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.927e7950.chunk.js","sourcesContent":["import { useEffect, useReducer } from \"react\";\nimport axios from \"axios\";\n\nconst ACTIONS = {\n  MAKE_REQUEST: \"make_request\",\n  GET_DATA: \"loading\",\n  ERROR: \"error\",\n  HAS_NEXT_PAGE: \"has_next_page\",\n};\n\nconst CORS_URL = \"https://majd-cors-anywhere.herokuapp.com/\";\nconst API_URL = \"https://jobs.github.com/positions.json\";\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case ACTIONS.MAKE_REQUEST:\n      return { jobs: [], loading: true };\n\n    case ACTIONS.GET_DATA:\n      return { ...state, jobs: action.payload.jobs, loading: false };\n\n    case ACTIONS.ERROR:\n      return { ...state, loading: false, error: action.payload.error };\n\n    case ACTIONS.HAS_NEXT_PAGE:\n      return { ...state, hasNextPage: action.payload.hasNextPage };\n\n    default:\n      return state;\n  }\n};\n\nconst useFetch = (params, page) => {\n  const [state, dispatch] = useReducer(reducer, {\n    jobs: [],\n    loading: true,\n    // error: null,\n  });\n\n  useEffect(() => {\n    const cancelRequestTimer1 = setTimeout(() => {\n      dispatch({ type: ACTIONS.MAKE_REQUEST });\n      axios(`${CORS_URL}${API_URL}`, {\n        params: { mardown: true, page: page, ...params },\n      })\n        .then((res) => {\n          dispatch({ type: ACTIONS.GET_DATA, payload: { jobs: res.data } });\n          // dispatch({ type: ACTIONS.MAKE_REQUEST, payload: { data: res } });\n          console.log(res);\n        })\n        .catch((err) => {\n          dispatch({ type: ACTIONS.ERROR, payload: { error: err } });\n        });\n    });\n\n    const cancelRequestTimer2 = setTimeout(() => {\n      axios(`${CORS_URL}${API_URL}`, {\n        params: { mardown: true, page: page + 1, ...params },\n      })\n        .then((res) => {\n          dispatch({\n            type: ACTIONS.HAS_NEXT_PAGE,\n            payload: { hasNextPage: res.data.length !== 0 },\n          });\n        })\n        .catch((err) => {\n          dispatch({ type: ACTIONS.ERROR, payload: { error: err } });\n        });\n    });\n    return () => {\n      clearTimeout(cancelRequestTimer1);\n      clearTimeout(cancelRequestTimer2);\n    };\n  }, [params, page]);\n\n  return [state.jobs, state.loading, state.error, state.hasNextPage];\n};\n\nexport default useFetch;\n","import React, { useRef, useState } from \"react\";\nimport ReactMarkdown from \"react-markdown/with-html\";\nimport \"./Job.css\";\n\nconst Job = ({ job }) => {\n  const current_datetime = new Date(job.created_at);\n  const formatted_date =\n    current_datetime.getDate() +\n    \"-\" +\n    (current_datetime.getMonth() + 1) +\n    \"-\" +\n    current_datetime.getFullYear();\n  const description = useRef(null);\n  const [showHideDetails, setShowHideDetails] = useState(false);\n\n  const showHide = () => {\n    description.current.classList.toggle(\"description-opened\");\n    setShowHideDetails((prevState) => !prevState);\n  };\n\n  return (\n    <div className=\"Job\">\n      <div className=\"title-company-logo\">\n        <h1 className=\"title\">\n          {job.title} - <span className=\"company-name\">{job.company}</span>\n        </h1>\n        <div className=\"logo\">\n          <img src={job.company_logo} alt={job.id} />\n        </div>\n      </div>\n      <h3 className=\"date\">{formatted_date}</h3>\n      <div className=\"time-place\">\n        <h3 className=\"type\">{job.type}</h3>\n        <h3 className=\"location\">{job.location}</h3>\n      </div>\n      <a className=\"link\" href={job.url} target=\"_blank\">\n        {job.url}\n      </a>\n      <div className=\"details\">\n        <div className=\"description\" ref={description}>\n          <ReactMarkdown\n            source={job.description}\n            escapeHtml={false}\n          ></ReactMarkdown>\n        </div>\n\n        <button className=\"btn-description\" onClick={showHide}>\n          {showHideDetails === false ? \"view details\" : \"hide details\"}\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default Job;\n","import React from \"react\";\nimport \"./JobPagination.css\";\nimport PreviousIcon from \"./../../assets/previous.svg\";\nimport NextIcon from \"./../../assets/next.svg\";\n\nconst JobPagination = ({ page, setPage, hasNextPage }) => {\n  const adjustPage = (amount) => {\n    setPage((currentPage) => currentPage + amount);\n  };\n  return (\n    <div className=\"PaginationContainer\">\n      {/* The Previous Icon : show when not in 1     */}\n      {page !== 1 && (\n        <div\n          className=\"PaginationItem\"\n          onClick={() => {\n            adjustPage(-1);\n          }}\n        >\n          <img src={PreviousIcon} alt=\"previousIcon\" />\n        </div>\n      )}\n\n      {/* condition 1 : show 1 when our page number not equal 1  */}\n      {/* condition 2 : show ... when our page number > 2  */}\n      {/* condition 3 : show  previous page when page number > 2 => if pageNumber = 3 we will show the previous page which is 2    */}\n      {page !== 1 && (\n        <div\n          className=\"PaginationItem\"\n          onClick={() => {\n            setPage(1);\n          }}\n        >\n          1\n        </div>\n      )}\n      {page > 2 && <div className=\"PaginationItem\">...</div>}\n      {page > 2 && (\n        <div\n          className=\"PaginationItem\"\n          onClick={() => {\n            adjustPage(-1);\n          }}\n        >\n          {page - 1}\n        </div>\n      )}\n\n      {/* 1 div :  show current page number with active class*/}\n      {/* 2 div :  show next current page number if there's a next page*/}\n      <div className=\"PaginationItem Active\">{page}</div>\n      {hasNextPage && (\n        <div\n          className=\"PaginationItem\"\n          onClick={() => {\n            adjustPage(1);\n          }}\n        >\n          {page + 1}\n        </div>\n      )}\n\n      {/* The next Icon */}\n      {hasNextPage && (\n        <div\n          className=\"PaginationItem\"\n          onClick={() => {\n            adjustPage(1);\n          }}\n        >\n          <img src={NextIcon} alt=\"nextIcon\" />\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default JobPagination;\n","import React from \"react\";\nimport \"./SearchForm.css\";\n\nconst SearchForm = ({ params, onParamsChange }) => {\n  return (\n    <form action=\"\" className=\"SearchForm\">\n      <div className=\"input-group\">\n        <label htmlFor=\"location\">Location</label>\n        <input\n          name=\"location\"\n          type=\"text\"\n          onChange={onParamsChange}\n          value={params.description}\n        />\n      </div>\n\n      <div className=\"input-group\">\n        <label htmlFor=\"description\">Description</label>\n        <input\n          name=\"description\"\n          type=\"text\"\n          onChange={onParamsChange}\n          value={params.description}\n        />\n      </div>\n\n      <div className=\"input-group\">\n        <input\n          type=\"checkbox\"\n          name=\"full_time\"\n          id=\"full_time\"\n          onChange={onParamsChange}\n          value={params.full_time}\n        />\n        <label htmlFor=\"full_time\">Only Full Time</label>\n      </div>\n    </form>\n  );\n};\n\nexport default SearchForm;\n","import React, { useState } from \"react\";\nimport useFetch from \"./hooks/useFetch\";\nimport Job from \"./components/Job/Job\";\nimport JobPagination from \"./components/JobPagination/JobPagination\";\nimport SearchForm from \"./components/SearchForm/SearchForm\";\nimport \"./App.css\";\n\nfunction App() {\n  const [params, setParams] = useState({\n    location: \"\",\n    description: \"\",\n    full_time: \"\",\n  });\n  const [page, setPage] = useState(3);\n  const [jobs, loading, error, hasNextPage] = useFetch(params, page);\n\n  const onParamsChange = (e) => {\n    // get the input name and value, it's dynamic for inputs\n    let paramName;\n    let paramValue;\n    if ((e.target.name = \"full_time\")) {\n      paramName = e.target.name;\n      paramValue = e.target.checked;\n    } else {\n      paramName = e.target.name;\n      paramValue = e.target.value;\n    }\n    // return to first page when filtering\n    setPage(1);\n    setParams((prevParams) => ({ ...params, [paramName]: paramValue }));\n  };\n\n  return (\n    //\n    <div className=\"Container\">\n      <h1 style={{ textAlign: \"center\", fontSize: \"40px\" }}>GitHub Jobs</h1>\n      <SearchForm params={params} onParamsChange={onParamsChange} />\n      <JobPagination page={page} setPage={setPage} hasNextPage={hasNextPage} />\n      {loading && <h1>Loading...</h1>}\n      {error && <h1>Error, try Refreshing</h1>}\n      <div className=\"Jobs\">\n        {jobs.map((job) => {\n          return <Job key={job.id} job={job} />;\n        })}\n      </div>\n      <JobPagination page={page} setPage={setPage} hasNextPage={hasNextPage} />\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","module.exports = __webpack_public_path__ + \"static/media/previous.62e51539.svg\";","module.exports = __webpack_public_path__ + \"static/media/next.ba838726.svg\";"],"sourceRoot":""}